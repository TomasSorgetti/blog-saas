services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      - API_URL=${API_URL}
      - FRONT_URL=${FRONT_URL}
      - MONGO_URL=${MONGO_URL}
      - REDIS_URL=${REDIS_URL}
      - ELASTICSEARCH_URL=${ELASTICSEARCH_URL}
      - RABBIT_URL=${RABBIT_URL}
      - HASH_SALT_ROUNDS=${HASH_SALT_ROUNDS}
      - RESEND_API_KEY=${RESEND_API_KEY}
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - blog-network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    depends_on:
      - app
    networks:
      - blog-network

  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--loglevel", "warning"]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blog-network

volumes:
  redis-data:
  es-data:

networks:
  blog-network:
    driver: bridge
