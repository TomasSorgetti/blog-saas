version: "3.9"

services:
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: ["redis-server", "--loglevel", "warning"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blog-network

  mongo:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_DB_NAME}
    command: ["mongod", "--quiet", "--logpath", "/dev/null"]
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping').ok"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blog-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.0
    ports:
      - "9200:9200"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - logger.org.elasticsearch=WARN
      - logger.org.apache.lucene=ERROR
    volumes:
      - es-data:/usr/share/elasticsearch/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          'curl -s http://localhost:9200/_cluster/health | grep -q ''"status":"green"''',
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blog-network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=user
      - RABBITMQ_DEFAULT_PASS=password
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - blog-network

  worker_email:
    build:
      context: .
      dockerfile: Dockerfile
    command: node src/infrastructure/workers/email.worker.js
    restart: unless-stopped
    environment:
      - RABBIT_URL=amqp://user:password@rabbitmq:5672
      - RESEND_API_KEY=${RESEND_API_KEY}
    depends_on:
      - rabbitmq
    networks:
      - blog-network

volumes:
  redis-data:
  mongo-data:
  es-data:

networks:
  blog-network:
    driver: bridge
